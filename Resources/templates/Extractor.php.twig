<?php

namespace Keboola\{{ classPrefix }}ExtractorBundle;

use Keboola\ExtractorBundle\Extractor\{{ parentExtractor }} as Extractor,
	Keboola\ExtractorBundle\Config\Config;
use Syrup\ComponentBundle\Exception\SyrupComponentException;
use {{ clientClass }} as Client;
use Keboola\{{ classPrefix }}ExtractorBundle\{{ classPrefix }}ExtractorJob;

class {{ classPrefix }}Extractor extends Extractor
{
	protected $name = "{{ appName }}";

	public function run(Config $config) {
/**
 *	REST Example:
 *		$client = new Client(
 * 			["base_url" => "https://api.example.com/v1/"]
 *		);
 *		$client->getEmitter()->attach($this->getBackoff());
 */

/**
 *	WSDL Example:
 *		$options = array(
 * // 			"trace" => 1, // DEBUG
 *			"connection_timeout" => 15,
 *			"compression" => SOAP_COMPRESSION_ACCEPT | SOAP_COMPRESSION_GZIP,
 *			"location" => $config["soapEndpoint"]
 *		);
 *		$client = new Client($config["soapEndpoint"] . "?WSDL", $options);
 *
 *		$parser = new WsdlParser($client->__getTypes());
 */

		foreach($config->getJobs() as $jobConfig) {
			// Otherwise it must be created like Above example, OR within the job itself
			$job = new {{ classPrefix }}ExtractorJob($jobConfig, $client, $parser);
			$job->run();
		}

		// ONLY available in the Json/Wsdl parsers -
		// otherwise just pass an array of CsvFile OR Common/Table files to upload
		return $parser->getCsvFiles();
	}
}
